#!/usr/bin/env ruby
# vim: ft=ruby

require 'fileutils'

def system!(command)
  system(command) || abort("[error] command failed: #{command}")
end

current_branch = `git rev-parse --abbrev-ref HEAD`.strip

# check if current branch is main and checkout it
unless %w[master main].include? current_branch
  puts '[error] you must be on the main branch to deploy'
  exit 1
end

# check if there are uncommitted changes
if `git status --porcelain`.strip != ''
  puts '[error] there are uncommitted changes'
  exit 1
end

# build the site
puts '[info] building site...'
`middleman build --clean`

# stash the builded files
puts '[info] stashing builded files...'
`git stash push --include-untracked --keep-index`

# change to gh-pages branch and update it
puts '[info] changing to gh-pages branch...'
`git checkout gh-pages && git pull origin gh-pages`

# pop the stash
puts '[info] popping stash...'
`git stash pop`

# remove all files
puts '[info] removing all unnecessary files...'
Dir.glob('*').each do |file|
  FileUtils.rm_rf(file) unless ['build', '.git'].include?(file)
end

# copy the build files
puts '[info] copying build files...'
Dir.glob('build/*').each do |file|
  FileUtils.cp_r(file, '.')
end

# commit the changes
puts '[info] committing changes...'
`git add .`
`git commit -m "build: deployment to gh-pages"`

# push the changes
puts '[info] pushing changes...'
`git push origin gh-pages`

# change back to main branch
puts '[info] changing back to main branch...'
`git checkout main`

puts '[info] done!'
